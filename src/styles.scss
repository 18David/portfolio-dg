
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;
@use './theme/_theme-colors.scss' as theme;

/* Style bouton mécanique */
.mech-btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 0.75rem;

  font: var(--mat-sys-body-medium);
  cursor: pointer;
  user-select: none;

  /* Bord 3D bas/droite */
  box-shadow: 4px 4px 0 var(--mat-sys-primary);
  transition: transform 0.1s ease, box-shadow 0.1s ease;

  /* Hover / Clic → touche enfoncée */
  &:hover,
  &:active {
    transform: translate(2px, 2px);
    box-shadow: 2px 2px 0 var(--mat-sys-primary);
  }

  &:active {
    transform: translate(3px, 3px);
    box-shadow: 1px 1px 0 var(--mat-sys-primary);
  }

  &:disabled,
  &.disabled,
  &[aria-disabled="true"] {
    cursor: not-allowed;
    pointer-events: none;           /* plus de hover/clic */
    transition: none !important;    /* stop anim */
    transform: none !important;     /* pas d’enfoncement */
    box-shadow: 4px 4px 0 var(--mat-sys-primary) !important; /* bord par défaut */
    opacity: .55;                   /* grisé */
    filter: grayscale(60%) saturate(85%) brightness(95%);
  }

  /* Sécurité : neutralise hover/active si jamais appliqués */
  &:disabled:hover,
  &.disabled:hover,
  &[aria-disabled="true"]:hover,
  &:disabled:active,
  &.disabled:active,
  &[aria-disabled="true"]:active {
    transform: none !important;
    box-shadow: 4px 4px 0 var(--mat-sys-primary) !important;
  }
}

/* Optionnel : si tu veux forcer un texte un peu plus pâle */
.mech-btn:disabled,
.mech-btn.disabled,
.mech-btn[aria-disabled="true"] {
  color: color-mix(in srgb, var(--mat-sys-primary) 70%, #000 30%);
}

/* Variante principale (fond secondary) */
.mech-btn.secondary {
  background-color: rgb(239 246 224 / var(--tw-bg-opacity, 1));
  color: var(--mat-sys-on-primary-fixed)!important;
}

/* Variante secondaire (fond tertiary) */
.mech-btn.primary {
  background-color: var(--mat-sys-tertiary-container);
  color: var(--mat-sys-on-primary-fixed)!important;
}

/* État "pressed" persistant */
.mech-btn.pressed,
.mech-btn[aria-pressed="true"] {
  transform: translate(3px, 3px);
  box-shadow: 1px 1px 0 var(--mat-sys-primary);
}

/* Empêche le hover/clic de remonter le bouton */
.mech-btn.pressed:hover,
.mech-btn.pressed:active,
.mech-btn[aria-pressed="true"]:hover,
.mech-btn[aria-pressed="true"]:active {
  transform: translate(3px, 3px) !important;
  box-shadow: 1px 1px 0 var(--mat-sys-primary) !important;
}

.mat-mdc-form-field.mech-select{
  font: var(--mat-sys-body-medium);
  .mat-mdc-text-field-wrapper{
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    background-color: var(--mat-sys-tertiary-container);
    //padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 0.75rem;

    cursor: pointer;
    user-select: none;

    /* Bord 3D bas/droite */
    box-shadow: 4px 4px 0 var(--mat-sys-primary);
    transition: transform 0.1s ease, box-shadow 0.1s ease;

    .mat-mdc-form-field-flex{
      .mat-mdc-form-field-infix{
        min-height: 10px;
        width: auto;
        min-width: 17px;
        padding-top: 0.78rem;
        padding-bottom: 0.78rem;
        .mat-mdc-select{

          font: var(--mat-sys-body-medium);

          .mat-mdc-select-trigger{
            .mat-mdc-select-arrow-wrapper{
              display: none;
            }
          }
          .mat-mdc-select-min-line{
            font: var(--mat-sys-body-medium);
          }
        }
      }
    }
  }
  &:hover .mat-mdc-text-field-wrapper,
  &:active .mat-mdc-text-field-wrapper{
    transform: translate(2px, 2px);
    box-shadow: 2px 2px 0 var(--mat-sys-primary);
  }

  &:active .mat-mdc-text-field-wrapper{
    transform: translate(3px, 3px);
    box-shadow: 1px 1px 0 var(--mat-sys-primary);
  }
}


.cdk-overlay-connected-position-bounding-box{
  padding-top: 10px;
  .mat-mdc-select-panel{
    background-color: var(--mat-sys-secondary-container)!important;
    .mdc-list-item--selected{
      background-color: rgb(239 246 224 / var(--tw-bg-opacity, 1))!important;
      .mat-pseudo-checkbox{
        display: none;
      }
    }
  }
}



html {


  @include mat.theme((
    color: (
      primary: theme.$primary-palette,
      tertiary: theme.$tertiary-palette,
      secondary: theme.$secondary-palette,
      neutral: theme.$neutral-palette,
      'neutral-variant': theme.$neutral-variant-palette,
      error: theme.$error-palette,
    ),
    typography: (
      plain-family: 'Hanken Grotesk',
      brand-family: 'Bricolage Grotesque',
      bold-weight: 700,
      medium-weight: 500,
      regular-weight: 400,
    ),
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
/* You can add global styles to this file, and also import other style files */
@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Bricolage+Grotesque:opsz,wght@12..96,200..800&family=Hanken+Grotesk:ital,wght@0,100..900;1,100..900&display=swap');


html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


